

search for "catch (Exception" and "close();"


==task==

// You don't like what Task does with exceptions right now
// It should catch ProgramException and store it in exception
// But at a more outer level catch Exception and give it to Mistake.grab to kill the program

C:\Documents\program\pipe\source\base\state\Task.java(37):			} catch (Exception e) { exception = e; }    // Catch and save any Exception it throws

C:\Documents\program\pipe\source\base\state\Task.java(50):			close();              // Mark this Task closed

C:\Documents\program\pipe\source\base\encode\HashTask.java(67):			close();       // We're done
C:\Documents\program\pipe\source\base\file\OpenTask.java(52):			close();       // We're done
C:\Documents\program\pipe\source\base\file\ReadTask.java(66):			close();       // We're done
C:\Documents\program\pipe\source\base\file\WriteTask.java(63):			close();       // We're done
C:\Documents\program\pipe\source\base\internet\packet\ReceiveTask.java(61):			close();              // We're done
C:\Documents\program\pipe\source\base\internet\packet\SendTask.java(58):			close();              // We're done
C:\Documents\program\pipe\source\base\internet\socket\AcceptTask.java(52):			close();       // We're done
C:\Documents\program\pipe\source\base\internet\socket\ConnectTask.java(54):			close();       // We're done
C:\Documents\program\pipe\source\base\internet\socket\DownloadTask.java(62):			close();       // We're done
C:\Documents\program\pipe\source\base\internet\socket\UploadTask.java(62):			close();       // We're done
C:\Documents\program\pipe\source\base\internet\web\DomainTask.java(56):			close();       // We're done




====


C:\Documents\program\pipe\source\base\file\File.java(60):		try { file.close(); } catch (IOException e) { Mistake.ignore(e); } // Also closes file's FileChannel


C:\Documents\program\pipe\source\base\internet\packet\ListenPacket.java(37):		try { channel.close(); } catch (IOException e) { Mistake.ignore(e); }
C:\Documents\program\pipe\source\base\internet\socket\ListenSocket.java(38):		try { channel.close(); } catch (IOException e) { Mistake.ignore(e); }
C:\Documents\program\pipe\source\base\internet\socket\Socket.java(69):		try { channel.close(); } catch (IOException e) { Mistake.ignore(e); }
C:\Documents\program\pipe\source\base\state\Close.java(24):	public abstract void close(); // Your object that extends Close must have this method
C:\Documents\program\pipe\source\base\state\Close.java(64):		try { c.close(); } catch (Exception e) { Mistake.ignore(e); } // Log the exception, but keep going to close the next object
C:\Documents\program\pipe\source\pipe\center\Center.java(47):		Mistake.close();
C:\Documents\program\pipe\source\pipe\core\museum\Pipe.java(14):	public void close();
C:\Documents\program\pipe\source\pipe\core\museum\SendPipe.java(28):			pipe.close();
C:\Documents\program\pipe\source\pipe\main\Program.java(25):		Mistake.close();











